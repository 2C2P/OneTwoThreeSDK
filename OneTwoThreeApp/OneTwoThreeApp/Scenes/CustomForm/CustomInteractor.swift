//
//  CustomInteractor.swift
//  OneTwoThreeApp
//
//  Created by Orawan Manasombun on 28/6/21.
//  Copyright (c) 2021 2C2P. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import OneTwoThreeSDK

protocol CustomBusinessLogic {
    func doInitial(request: Custom.Initial.Request)
    func doStartDeeplink(request: Custom.StartDeeplink.Request)
}

protocol CustomDataStore {
    //var name: String { get set }
}

class CustomInteractor: CustomBusinessLogic, CustomDataStore {
    
    var presenter: CustomPresentationLogic?
    var worker: CustomWorker?
    
    
    // MARK: - Initial
    
    func doInitial(request: Custom.Initial.Request) {
        worker = CustomWorker()
        worker?.doFetchInputTypes(completion: { types in
            let response = Custom.Initial.Response(types: types)
            self.presenter?.presentInitial(response: response)
        })
    }
    
    // MARK: - Start Deeplink
    
    func doStartDeeplink(request: Custom.StartDeeplink.Request) {
        Manager.shared.service.startDeeplink(
            merchant: request.merchant,
            transaction: request.transaction,
            buyer: request.buyer
        ) { response in
            
            if response.responseCode == ResponseCode.success {
                let response = Custom.StartDeeplink.Response(response: response)
                self.presenter?.presentDeeplink(response: response)
                
            } else {
                let response = Custom.Error.Response(error: ErrorEvent.custom(message: response.responseDesc))
                self.presenter?.presentError(response: response)
            }
            
        } failureBlock: { error in
            let response = Custom.Error.Response(error: ErrorEvent.custom(message: error.localizedDescription))
            self.presenter?.presentError(response: response)
        }
    }
}
