//
//  HomeViewController.swift
//  OneTwoThreeApp
//
//  Created by Orawan Manasombun on 23/6/21.
//  Copyright (c) 2021 2C2P. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeDisplayLogic: AnyObject {
    func displayProducts(viewModel: Home.GetProducts.ViewModel)
    func displayPayment(viewModel: Home.Payment.ViewModel)
    func displayCustom(viewModel: Home.Custom.ViewModel)
}

class HomeViewController: BaseViewController, HomeDisplayLogic {
    
    var interactor: HomeBusinessLogic?
    var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = HomeInteractor()
        let presenter = HomePresenter()
        let router = HomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureUI()
        doGetProducts()
    }
    
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.isNavigationBarHidden = false
    }
    
    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
        if tableView.tableHeaderView == nil {
            if tableHeaderView != nil {
                tableHeaderView?.titleLabel.text = "Best Watches"
                tableView.tableHeaderView = tableHeaderView
            }
        }
        tableView.tableFooterView = UIView()
    }
    
    
    @IBOutlet weak var tableView: UITableView!
    
    private let tableHeaderView = HomeHeaderView.loadFromNib() as? HomeHeaderView
    private var products: [Product] = []
    
    // MARK: - Configure UI
    
    private func configureUI() {
        
    }

    
    // MARK: - Get Products
    
    func doGetProducts() {
        let request = Home.GetProducts.Request()
        interactor?.doGetProducts(request: request)
    }
    
    func displayProducts(viewModel: Home.GetProducts.ViewModel) {
        products = viewModel.products
        tableView.reloadData()
    }
    
    // MARK: - Navigate to Payment
    
    func doNavigateToPayment(product: Product) {
        let request = Home.Payment.Request(product: product)
        interactor?.doNavigateToPayment(request: request)
    }
    
    func displayPayment(viewModel: Home.Payment.ViewModel) {
        performSegue(withIdentifier: "Payment", sender: nil)
    }
    
    // MARK: - Navigate to Custom
    
    func doNavigateToCustom() {
        let request = Home.Custom.Request()
        interactor?.doNavigateToCustom(request: request)
    }
    
    func displayCustom(viewModel: Home.Custom.ViewModel) {
        performSegue(withIdentifier: "Custom", sender: nil)
    }
    
    
    // MARK: - Private
    
    private func isCustomCell(index: Int) -> Bool {
        return products.count == index
    }
}


// MARK: - TableView DataSouce & Delegate

extension HomeViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if isCustomCell(index: indexPath.row) {
            guard let cell = tableView.dequeueReusableCell(withIdentifier: "CustomCell", for: indexPath) as? CustomCell else {
                return UITableViewCell()
            }
            cell.titleLabel.text = "Custom"
            return cell
        } else {
            guard let cell = tableView.dequeueReusableCell(withIdentifier: "ProductCell", for: indexPath) as? ProductCell else {
                return UITableViewCell()
            }
            cell.configure(product: products[indexPath.row])
            return cell
        }
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return products.count + 1
    }
    
}

extension HomeViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if isCustomCell(index: indexPath.row) {
            doNavigateToCustom()
        } else {
            doNavigateToPayment(product: products[indexPath.row])
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return isCustomCell(index: indexPath.row) ? 80 : 140
    }
}
